#pragma once
#include <cstddef>
#include "includes.h"
// 2020-10-22 22:00:21.891810900 UTC

namespace hazedumper
{
	namespace netvars
	{
		extern DWORD m_ArmorValue;
		extern DWORD m_Collision;
		extern DWORD m_CollisionGroup;
		extern DWORD m_Local;
		extern DWORD m_MoveType;
		extern DWORD m_OriginalOwnerXuidHigh;
		extern DWORD m_OriginalOwnerXuidLow;
		extern DWORD m_aimPunchAngle;
		extern DWORD m_aimPunchAngleVel;
		extern DWORD m_bGunGameImmunity;
		extern DWORD m_bHasDefuser;
		extern DWORD m_bHasHelmet;
		extern DWORD m_bIsDefusing;
		extern DWORD m_bIsScoped;
		extern DWORD m_bSpotted;
		extern DWORD m_bSpottedByMask;
		extern DWORD m_fAccuracyPenalty;
		extern DWORD m_fFlags;
		extern DWORD m_flFallbackWear;
		extern DWORD m_flFlashDuration;
		extern DWORD m_flFlashMaxAlpha;
		extern DWORD m_flNextPrimaryAttack;
		extern DWORD m_hActiveWeapon;
		extern DWORD m_hObserverTarget;
		extern DWORD m_hOwner;
		extern DWORD m_hOwnerEntity;
		extern DWORD m_iAccountID;
		extern DWORD m_iClip1;
		extern DWORD m_iCompetitiveRanking;
		extern DWORD m_iCompetitiveWins;
		extern DWORD m_iEntityQuality;
		extern DWORD m_iFOVStart;
		extern DWORD m_iFOV;
		extern DWORD m_iHealth;
		extern DWORD m_iItemIDHigh;
		extern DWORD m_iObserverMode;
		extern DWORD m_iShotsFired;
		extern DWORD m_iState;
		extern DWORD m_iTeamNum;
		extern DWORD m_lifeState;
		extern DWORD m_nFallbackPaintKit;
		extern DWORD m_nFallbackSeed;
		extern DWORD m_nFallbackStatTrak;
		extern DWORD m_nForceBone;
		extern DWORD m_nTickBase;
		extern DWORD m_szCustomName;
		extern DWORD m_szLastPlaceName;
		extern DWORD m_vecOrigin;
		extern DWORD m_vecVelocity;
		extern DWORD m_vecViewOffset;
		extern DWORD m_viewPunchAngle;
		extern DWORD deadflag;
		extern DWORD m_clrRender;
		extern DWORD m_flC4Blow;
		extern DWORD m_flTimerLength;
		extern DWORD m_flDefuseLength;
		extern DWORD m_flDefuseCountDown;
		extern DWORD cs_gamerules_data;
		extern DWORD m_SurvivalRules;
		extern DWORD m_SurvivalGameRuleDecisionTypes;
		extern DWORD m_bIsValveDS;
		extern DWORD m_bFreezePeriod;
		extern DWORD m_bBombPlanted;
		extern DWORD m_bIsQueuedMatchmaking;
		extern DWORD m_flSimulationTime;
		extern DWORD m_flLowerBodyYawTarget;
		extern DWORD m_angEyeAnglesX;
		extern DWORD m_angEyeAnglesY;
		extern DWORD m_flNextAttack;
		extern DWORD m_bStartedArming;
		extern DWORD m_bUseCustomBloomScale;
		extern DWORD m_bUseCustomAutoExposureMin;
		extern DWORD m_bUseCustomAutoExposureMax;
		extern DWORD m_flCustomBloomScale;
		extern DWORD m_flCustomAutoExposureMin;
		extern DWORD m_flCustomAutoExposureMax;
		extern DWORD m_iItemDefinitionIndex;
		extern DWORD m_iGlowIndex;
		extern DWORD m_iCrosshairId;
		extern DWORD m_bInReload;
		extern DWORD m_dwBoneMatrix;
		extern DWORD m_nModelIndex;
		extern DWORD m_iViewModelIndex;
		extern DWORD m_hViewModel;
	} // namespace netvars
	namespace signatures
	{
		constexpr ::std::ptrdiff_t anim_overlays = 0x2980;
		constexpr ::std::ptrdiff_t clientstate_choked_commands = 0x4D28;
		constexpr ::std::ptrdiff_t clientstate_delta_ticks = 0x174;
		constexpr ::std::ptrdiff_t clientstate_last_outgoing_command = 0x4D24;
		constexpr ::std::ptrdiff_t clientstate_net_channel = 0x9C;
		constexpr ::std::ptrdiff_t convar_name_hash_table = 0x2F0F8;
		constexpr ::std::ptrdiff_t dwClientState = 0x589DD4;
		constexpr ::std::ptrdiff_t dwClientState_GetLocalPlayer = 0x180;
		constexpr ::std::ptrdiff_t dwClientState_IsHLTV = 0x4D40;
		constexpr ::std::ptrdiff_t dwClientState_Map = 0x28C;
		constexpr ::std::ptrdiff_t dwClientState_MapDirectory = 0x188;
		constexpr ::std::ptrdiff_t dwClientState_MaxPlayer = 0x388;
		constexpr ::std::ptrdiff_t dwClientState_PlayerInfo = 0x52B8;
		constexpr ::std::ptrdiff_t dwClientState_State = 0x108;
		constexpr ::std::ptrdiff_t dwClientState_ViewAngles = 0x4D88;
		constexpr ::std::ptrdiff_t dwEntityList = 0x4D5022C;
		constexpr ::std::ptrdiff_t dwForceAttack = 0x3181790;
		constexpr ::std::ptrdiff_t dwForceAttack2 = 0x318179C;
		constexpr ::std::ptrdiff_t dwForceBackward = 0x31817E4;
		constexpr ::std::ptrdiff_t dwForceForward = 0x31817F0;
		constexpr ::std::ptrdiff_t dwForceJump = 0x51F9E44;
		constexpr ::std::ptrdiff_t dwForceLeft = 0x318176C;
		constexpr ::std::ptrdiff_t dwForceRight = 0x3181760;
		constexpr ::std::ptrdiff_t dwGameDir = 0x6285F8;
		constexpr ::std::ptrdiff_t dwGameRulesProxy = 0x526D144;
		constexpr ::std::ptrdiff_t dwGetAllClasses = 0xD6223C;
		constexpr ::std::ptrdiff_t dwGlobalVars = 0x589AD8;
		constexpr ::std::ptrdiff_t dwGlowObjectManager = 0x5298078;
		constexpr ::std::ptrdiff_t dwInput = 0x51A1808;
		constexpr ::std::ptrdiff_t dwInterfaceLinkList = 0x905904;
		constexpr ::std::ptrdiff_t dwLocalPlayer = 0xD3BC5C;
		constexpr ::std::ptrdiff_t dwMouseEnable = 0xD41800;
		constexpr ::std::ptrdiff_t dwMouseEnablePtr = 0xD417D0;
		constexpr ::std::ptrdiff_t dwPlayerResource = 0x317FB10;
		constexpr ::std::ptrdiff_t dwRadarBase = 0x5184F9C;
		constexpr ::std::ptrdiff_t dwSensitivity = 0xD4169C;
		constexpr ::std::ptrdiff_t dwSensitivityPtr = 0xD41670;
		constexpr ::std::ptrdiff_t dwSetClanTag = 0x89E20;
		constexpr ::std::ptrdiff_t dwViewMatrix = 0x4D41B74;
		constexpr ::std::ptrdiff_t dwWeaponTable = 0x51A22C8;
		constexpr ::std::ptrdiff_t dwWeaponTableIndex = 0x325C;
		constexpr ::std::ptrdiff_t dwYawPtr = 0xD41460;
		constexpr ::std::ptrdiff_t dwZoomSensitivityRatioPtr = 0xD46700;
		constexpr ::std::ptrdiff_t dwbSendPackets = 0xD41DA;
		constexpr ::std::ptrdiff_t dwppDirect3DDevice9 = 0xA7030;
		constexpr ::std::ptrdiff_t find_hud_element = 0x389A17D0;
		constexpr ::std::ptrdiff_t force_update_spectator_glow = 0x3A0752;
		constexpr ::std::ptrdiff_t interface_engine_cvar = 0x3E9EC;
		constexpr ::std::ptrdiff_t is_c4_owner = 0x3AD1E0;
		constexpr ::std::ptrdiff_t m_bDormant = 0xED;
		constexpr ::std::ptrdiff_t m_flSpawnTime = 0xA370;
		constexpr ::std::ptrdiff_t m_pStudioHdr = 0x294C;
		constexpr ::std::ptrdiff_t m_pitchClassPtr = 0x5185238;
		constexpr ::std::ptrdiff_t m_yawClassPtr = 0xD41460;
		constexpr ::std::ptrdiff_t model_ambient_min = 0x58CE4C;
		constexpr ::std::ptrdiff_t set_abs_angles = 0x1D4590;
		constexpr ::std::ptrdiff_t set_abs_origin = 0x1D43D0;
	} // namespace signatures
} // namespace hazedumper
